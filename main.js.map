{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/encryption/encryption.component.html","webpack:///./src/app/components/encryption/encryption.component.scss","webpack:///./src/app/components/encryption/encryption.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/jsonfetch/jsonfetch.component.html","webpack:///./src/app/components/jsonfetch/jsonfetch.component.scss","webpack:///./src/app/components/jsonfetch/jsonfetch.component.ts","webpack:///./src/app/components/mediaplayer/mediaplayer.component.html","webpack:///./src/app/components/mediaplayer/mediaplayer.component.scss","webpack:///./src/app/components/mediaplayer/mediaplayer.component.ts","webpack:///./src/app/config/resource.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,uhBAAuhB,qBAAqB,6zB;;;;;;;;;;;ACA5iB,uBAAuB,iBAAiB,EAAE,kBAAkB,kBAAkB,qBAAqB,sBAAsB,EAAE,8BAA8B,uBAAuB,sBAAsB,EAAE,kCAAkC,iBAAiB,wBAAwB,gBAAgB,yBAAyB,eAAe,gBAAgB,yBAAyB,+CAA+C,+CAA+C,EAAE,G;;;;;;;;;;;;;;;;;;;;;ACA1a;AAO1C;IALA;QAME,UAAK,GAAG,SAAS,CAAC;QAClB,eAAU,GAAY,KAAK,CAAC;IAK9B,CAAC;IAHC,mCAAY,GAAZ;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IANU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACc;AACV;AACW;AAET;AACuC;AACH;AACH;AACf;AAEjE,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,kGAAoB,EAAE;IACzD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,4FAAkB,EAAE;IACvD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,+FAAmB,EAAE;IACtD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6EAAa,EAAC;CACtC,CAAC;AAsBF;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kGAAoB;gBACpB,+FAAmB;gBACnB,4FAAkB;gBAClB,6EAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAClB,SAAS,EACT,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,8BAA8B;iBACvD;aACF;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvCtB,suC;;;;;;;;;;;ACAA,oCAAoC,uBAAuB,kCAAkC,uBAAuB,uBAAuB,uBAAuB,0BAA0B,wBAAwB,yBAAyB,oBAAoB,mBAAmB,mBAAmB,8CAA8C,sDAAsD,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3V;AACd;AAOpC;IAKE;QAJA,cAAS,GAAW,KAAK,CAAC,CAAC;QAC3B,aAAQ,GAAW,KAAK,CAAC,CAAC;QAC1B,WAAM,GAAW,KAAK,CAAC,CAAC;IAIxB,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,qCAAO,GAAP;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,SAAS,GAAG,6CAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,qCAAO,GAAP;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,SAAS,GAAG,6CAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,6CAAU,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,2CAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IApCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,mBAAmB,CAqC/B;IAAD,0BAAC;CAAA;AArC+B;;;;;;;;;;;;ACRhC,4iCAA4iC,cAAc,KAAK,iBAAiB,mP;;;;;;;;;;;ACAhlC,iCAAiC,0BAA0B,EAAE,4BAA4B,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACA1D;AACgB;AAOlE;IAKI,uBAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAJpD,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAG,+DAA+D,CAAC;QAC1E,aAAQ,GAAG,gBAAgB,CAAC;IAE4B,CAAC;IAEzD,gCAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAKC;QAHG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;YACvD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;QACvE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAS,GAAT,UAAW,IAAI,EAAE,GAAG;QAChB,IAAM,QAAQ,GAAG;YACb,IAAI;YACJ,GAAG;SACN;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAClE,UAAC,GAAG;YACA,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;QACrE,CAAC,EACD,kBAAQ;YACJ,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;QACjD,CAAC,EACD;YACI,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAc,GAAd,UAAgB,GAAG;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,GAAG,KAAK,GAAG,EAApB,CAAoB,CAAC,CAAC;QACzE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAClE,UAAC,GAAG;YACA,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;QACrE,CAAC,EACD,kBAAQ;YACJ,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;QACjD,CAAC,EACD;YACI,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC;IAhDQ,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAMuC,+EAAe;OAL3C,aAAa,CAiDzB;IAAD,oBAAC;CAAA;AAjDyB;;;;;;;;;;;;ACR1B,2f;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACc;AAOhE;IAIE,4BAAoB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;QAC3C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;IACvB,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAED,oCAAO,GAAP;QAAA,iBAGC;QAFC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;aAClC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,EAA7C,CAA6C,CAAC,CAAC;IACxE,CAAC;IAfU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAK8B,wEAAe;OAJlC,kBAAkB,CA6B9B;IAAD,yBAAC;CAAA;AA7B8B;;;;;;;;;;;;ACR/B,grBAAgrB,yH;;;;;;;;;;;ACAhrB,iCAAiC,iBAAiB,gCAAgC,uBAAuB,sBAAsB,uBAAuB,EAAE,wBAAwB,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAjH;AASzF;IAUE;QACE,IAAI,CAAC,MAAM,GAAG,2BAA2B,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IACtB,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAED,uCAAQ,GAAR;QACE,IAAM,OAAO,GAAG;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,MAAM;YACf,SAAS,EAAE,CAAC,OAAO,CAAC;SACrB,CAAC;QAEF,wFAAwF;QACxF,0CAA0C;QAC1C,MAAM;QACN,IAAM,MAAM,GAAG,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,8CAA8C;QAC9C,MAAM,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,8CAAe,GAAf;IAEA,CAAC;IA9BmB;QAAnB,+DAAS,CAAC,OAAO,CAAC;kCAAM,wDAAU;qDAAC;IARzB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,oBAAoB,CAuChC;IAAD,2BAAC;CAAA;AAvCgC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACoB;AAC1B;AAOrC;IAEE,yBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAG/C,iCAAO,GAAP,UAAQ,GAAU;QAChB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,iCAAO,GAAP,UAAQ,GAAU;QAChB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aACjD,IAAI,CACH,0DAAG,CAAC,UAAC,IAAc,IAAK,WAAI,CAAC,OAAO,CAAC,EAAb,CAAa,CAAC,CACvC,CAAC;IACJ,CAAC;IAED,mCAAS,GAAT,UAAU,GAAU,EAAE,OAAO;QAC3B,IAAM,iBAAiB,GAAG;YACxB,IAAI,EAAE,IAAI,IAAI,EAAE;YAChB,IAAI,EAAE,OAAO;SACd;QACD,IAAM,OAAO,GAAG;YACd,WAAW,EAAE,WAAW;YACxB,KAAK,EAAE;gBACL,oBAAoB,EAAE;oBACpB,UAAU,EAAE,gBAAgB;oBAC5B,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;iBAC7C;aACF;SACF;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IAChE,CAAC;IAEO,oCAAU,GAAlB;QACE,MAAM,CAAC;YACL,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,eAAe,EAAE,gDAAgD;aAClE,CAAC;SACH,CAAC;IACN,CAAC;IAzCY,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGgC,+DAAU;OAF/B,eAAe,CA0C3B;IAAD,sBAAC;CAAA;AA1C2B;;;;;;;;;;;;;ACT5B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">CHE.APPS</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"toggleNavbar()\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" [ngClass]=\\\"{ 'show': navbarOpen }\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/encryption\\\" routerLinkActive=\\\"active\\\" (click)=\\\"toggleNavbar()\\\">Encryption</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/media-player\\\" routerLinkActive=\\\"active\\\" (click)=\\\"toggleNavbar()\\\">Media Player</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/json-fetcher\\\" routerLinkActive=\\\"active\\\" (click)=\\\"toggleNavbar()\\\">Json Fetcher</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"app-content\\\">\\n  <div class=\\\"center-content\\\">\\n      <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"nav {\\n  z-index: 999; }\\n\\n.app-content {\\n  padding: 20pt;\\n  min-width: 600px;\\n  max-width: 1024px; }\\n\\n.app-content .app-header {\\n    font-weight: 300;\\n    padding: 15pt 0; }\\n\\n.app-content .center-content {\\n    width: 80%;\\n    padding-top: 10pt;\\n    margin: 0;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    margin-right: -50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'cheapps';\n  navbarOpen: boolean = false;\n\n  toggleNavbar() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { MediaplayerComponent } from './components/mediaplayer/mediaplayer.component';\nimport { EncryptionComponent } from './components/encryption/encryption.component';\nimport { JsonfetchComponent } from './components/jsonfetch/jsonfetch.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst appRoutes: Routes = [\n  { path: 'media-player', component: MediaplayerComponent },\n  { path: 'json-fetcher', component: JsonfetchComponent },\n  { path: 'encryption', component: EncryptionComponent },\n  { path: '', component: HomeComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MediaplayerComponent,\n    EncryptionComponent,\n    JsonfetchComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // <-- debugging purposes only\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div id=\\\"encryption-page\\\">\\n    <div class=\\\"encryption\\\">\\n      <p class=\\\"title\\\">String Encryptor</p>\\n      <ngForm>\\n        <div class=\\\"form-group\\\">\\n          <textarea class=\\\"form-control\\\" id=\\\"paintext\\\" rows=\\\"6\\\" [(ngModel)]=\\\"cleanText\\\" name=\\\"cleanText\\\"></textarea>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control btn btn-success btn-block\\\" type=\\\"submit\\\" value=\\\"Encrypt\\\" (click)=\\\"encrypt()\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control btn btn-danger btn-block\\\" type=\\\"submit\\\" value=\\\"Decrypt\\\" (click)=\\\"decrypt()\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <textarea class=\\\"form-control\\\" id=\\\"ciphertext\\\" rows=\\\"6\\\" [(ngModel)]=\\\"result\\\" name=\\\"result\\\"></textarea>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"button\\\" value=\\\"Clear\\\" (click)=\\\"clearTextarea()\\\" id=\\\"clrear\\\">\\n        </div>\\n      </ngForm>\\n    </div>\\n  </div>\\n\"","module.exports = \"#encryption-page {\\n  /* encrypt app */ }\\n  #encryption-page .encryption {\\n    min-width: 300px;\\n    max-width: 640px;\\n    margin-top: 10px;\\n    border-radius: 10px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    padding: 15px;\\n    height: 100%;\\n    color: white;\\n    background-color: rgba(43, 62, 99, 0.9);\\n    box-shadow: 1px 2px 10px 1px rgba(0, 0, 0, 0.5); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport * as crypto from 'crypto-js';\n\n@Component({\n  selector: 'app-encryption',\n  templateUrl: './encryption.component.html',\n  styleUrls: ['./encryption.component.scss']\n})\nexport class EncryptionComponent implements OnInit {\n  cleanText: String = void 0;\n  password: String = void 0;\n  result: String = void 0;\n\n  constructor() {\n    \n  }\n\n  ngOnInit() {\n  }\n\n  encrypt() {\n    this.result = '';\n\n    var encrypted = crypto.AES.encrypt(this.cleanText, this.password);\n\n    this.result = encrypted;\n    this.cleanText = '';\n    this.password = '';\n  }\n\n  decrypt() {\n    this.result = '';\n\n    var decrypted = crypto.AES.decrypt(this.cleanText, this.password);\n\n    this.result = decrypted.toString(crypto.enc.Utf8);\n    this.cleanText = '';\n    this.password = '';\n  }\n\n  clearTextarea() {\n    this.cleanText = '';\n    this.password = '';\n    this.result = '';\n  }\n}\n","module.exports = \"<div class=\\\"row bookmarks\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"search-result\\\">\\n            <ul class=\\\"list-group\\\">\\n                <li class=\\\"list-group-add\\\">\\n                    <div class=\\\"input-group mb-3\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\" aria-label=\\\"name\\\" aria-describedby=\\\"basic-addon2\\\" #bookmarkName>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"URL address\\\" aria-label=\\\"url\\\" aria-describedby=\\\"basic-addon2\\\" #bookmarkUrl>\\n                        <div class=\\\"input-group-append\\\">\\n                            <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"addToGist(bookmarkName.value, bookmarkUrl.value)\\\">Add</button>\\n                        </div>\\n                    </div>\\n                </li>\\n                <li class=\\\"list-group-item\\\"\\n                    *ngFor=\\\"let bookmark of bookmarks\\\">\\n                    <a target=\\\"_blank\\\"\\n                        href=\\\"{{bookmark.url}}\\\">{{ bookmark.name }}\\n                    </a>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger delete-btn\\\" (click)=\\\"deleteFromGist(bookmark.url)\\\">Delete</button>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".bookmarks ul {\\n  list-style-type: none; }\\n\\n.bookmarks .delete-btn {\\n  float: right; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ResourceService } from 'src/app/config/resource.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n    bookmarks = [];\n    cheGist = 'https://api.github.com/gists/973de2c3eb3f55518e97a1d3d18eb79e';\n    gistFile = 'bookmarks.json';\n    \n    constructor(private resourceService: ResourceService) { }\n\n    ngOnInit() { \n        this.loadGist();\n    }\n\n    loadGist () {\n        \n        this.resourceService.getGist(this.cheGist).subscribe(result => {\n            this.bookmarks = JSON.parse(result[this.gistFile]['content']).data;\n        });\n    }\n\n    addToGist (name, url) {\n        const newEntry = {\n            name,\n            url\n        }\n        this.bookmarks.push(newEntry);\n        this.resourceService.patchGist(this.cheGist, this.bookmarks).subscribe(\n            (val) => {\n                console.log(\"PATCH call successful value returned in body\", val);\n            },\n            response => {\n                console.log(\"PATCH call in error\", response);\n            },\n            () => {\n                console.log(\"The PATCH observable is now completed.\");\n        });\n    }\n\n    deleteFromGist (url) {\n        this.bookmarks = this.bookmarks.filter(bookmark => bookmark.url !== url);\n        this.resourceService.patchGist(this.cheGist, this.bookmarks).subscribe(\n            (val) => {\n                console.log(\"PATCH call successful value returned in body\", val);\n            },\n            response => {\n                console.log(\"PATCH call in error\", response);\n            },\n            () => {\n                console.log(\"The PATCH observable is now completed.\");\n        });\n    }\n}\n","module.exports = \"<div class=\\\"app-content\\\">\\n  <div class=\\\"json-fetcher\\\">\\n    <div class=\\\"input-group mb-3\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"serverUrl\\\" placeholder=\\\"server url\\\" aria-label=\\\"JSON server's URL\\\" aria-describedby=\\\"basic-addon2\\\">\\n      <div class=\\\"input-group-append\\\">\\n        <a class=\\\"input-group-text\\\" id=\\\"basic-addon2\\\" (click)=\\\"getJSON()\\\">Fetch</a>\\n      </div>\\n    </div>\\n    <div [innerHTML]=\\\"movies\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ResourceService } from '../../config/resource.service';\n\n@Component({\n  selector: 'app-jsonfetch',\n  templateUrl: './jsonfetch.component.html',\n  styleUrls: ['./jsonfetch.component.scss']\n})\nexport class JsonfetchComponent implements OnInit {\n  serverUrl:string;\n  movies:any;\n\n  constructor(private resource: ResourceService) {\n    this.serverUrl = '';\n    this.movies = void 0;\n  }\n\n  ngOnInit() {\n  }\n\n  getJSON() {\n    this.resource.getJSON(this.serverUrl)\n      .subscribe(movies => this.movies = JSON.stringify(movies, null, 2));\n  }\n\n  // prettifyJSON(json: any){\n  //     if (typeof json != 'string') {\n  //       json = JSON.parse(json);\n  //     }\n  //     const files = json.files;\n  //     let dom = '<div>';\n  //     files.array.forEach(element => {\n  //       dom = `${dom}<div>#${element}</div><br>`;\n  //     });\n  //     dom = `${dom}</div>`\n  // }\n\n}\n","module.exports = \"<div class=\\\"app-content\\\">\\n  <div class=\\\"media-player\\\">\\n    <div class=\\\"input-group mb-3\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"video\\\" placeholder=\\\"media url\\\" aria-label=\\\"Media's URL\\\" aria-describedby=\\\"basic-addon2\\\">\\n      <div class=\\\"input-group-append\\\">\\n        <a class=\\\"input-group-text\\\" id=\\\"basic-addon2\\\" (click)=\\\"getMedia()\\\">Get It</a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"video\\\">\\n      <div class=\\\"col text-center\\\">\\n        <video id=\\\"my-video\\\" class=\\\"video-js vjs-big-play-centered mini-play\\\"\\n                width=\\\"640\\\" height=\\\"360\\\" [poster]=\\\"poster\\\" style=\\\"margin: auto;\\\">\\n          <source [src]=\\\"video\\\" type=\\\"video/mp4\\\">\\n        </video>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".media-player {\\n  width: 640px;\\n  align-content: space-around;\\n  text-align: center;\\n  margin-left: auto;\\n  margin-right: auto; }\\n  .media-player .row {\\n    padding-top: 10px; }\\n\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef  } from '@angular/core';\n\ndeclare var videojs: any;\n\n@Component({\n  selector: 'app-mediaplayer',\n  templateUrl: './mediaplayer.component.html',\n  styleUrls: ['./mediaplayer.component.scss']\n})\nexport class MediaplayerComponent implements OnInit {\n  // Instancia do video.js.\n  vidObj: any;\n  // Poster para ser usado no video.js\n  poster: string;\n  // URL do video a ser reproduzido.\n  video: string;\n  // Acessa o elemento video do html5 via viewchild.\n  @ViewChild('myvid') vid: ElementRef;\n\n  constructor() {\n    this.poster = 'assets/img/movie-icon.png';\n    this.video = void 0;\n  }\n\n  ngOnInit() {\n  }\n\n  getMedia() {\n    const options = {\n      controls: true,\n      autoplay: false,\n      preload: 'auto',\n      techOrder: ['html5']\n    };\n\n    // this.vidObj = new videojs(this.vid.nativeElement, options, function onPlayerReady() {\n    //   videojs.log('Your player is ready!');\n    // });\n    const player = videojs('my-video', options);\n    player.pause();\n    player.src(this.video);\n    // set src track corresponding to new movie //\n    player.load();\n  }\n\n  ngAfterViewInit() {\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Response, RequestOptions } from \"@angular/http\"\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResourceService {\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  getJSON(url:string) {\n    return this.httpClient.get(url);\n  }\n\n  getGist(url:string): Observable<any> {\n    return this.httpClient.get(url, this.getHeaders())\n    .pipe(\n      map((resp: Response) => resp['files'])\n    );\n  }\n\n  patchGist(url:string, content) {\n    const structuredContent = {\n      date: new Date(),\n      data: content\n    }\n    const payload = {\n      description: \"Bookmarks\",\n      files: {\n        \"che-bookmarks.json\": {\n          \"filename\": \"bookmarks.json\",\n          \"content\": JSON.stringify(structuredContent)\n        }\n      }\n    }\n\n    return this.httpClient.patch(url, payload, this.getHeaders());\n  }\n\n  private getHeaders() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': 'token 997a8ed674a0826794c73bb22cadd100bec4e413'\n      })\n    };\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}